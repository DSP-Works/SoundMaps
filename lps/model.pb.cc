// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Code>
     _instance;
} _Code_default_instance_;
class BeaconDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Beacon>
     _instance;
} _Beacon_default_instance_;
class EnvironementDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Environement>
     _instance;
} _Environement_default_instance_;

namespace protobuf_model_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Code, data_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, snr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Beacon, z_),
  3,
  0,
  4,
  2,
  5,
  1,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, beacons_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environement, height_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(Code)},
  { 11, 25, sizeof(Beacon)},
  { 34, 47, sizeof(Environement)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Code_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Beacon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Environement_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "model.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Code_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Code_default_instance_);_Beacon_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Beacon_default_instance_);_Environement_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Environement_default_instance_);_Beacon_default_instance_._instance.get_mutable()->code_ = const_cast< ::Code*>(
      ::Code::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013model.proto\"i\n\004Code\022\030\n\004type\030\001 \002(\0162\n.Co"
      "de.Type\022\r\n\005order\030\002 \002(\r\022\014\n\004data\030\003 \003(\002\"*\n\004"
      "Type\022\010\n\004Gold\020\000\022\n\n\006Kasami\020\001\022\014\n\010Hadamard\020\002"
      "\"\204\001\n\006Beacon\022\n\n\002id\030\001 \002(\r\022\014\n\004uuid\030\002 \002(\t\022\013\n"
      "\003snr\030\003 \002(\002\022\023\n\004code\030\004 \002(\0132\005.Code\022\017\n\007enabl"
      "ed\030\005 \002(\010\022\014\n\004name\030\006 \001(\t\022\t\n\001x\030\007 \002(\002\022\t\n\001y\030\010"
      " \002(\002\022\t\n\001z\030\t \002(\002\"\234\001\n\014Environement\022\014\n\004name"
      "\030\002 \001(\t\022\020\n\010latitude\030\003 \001(\002\022\021\n\tlongitude\030\004 "
      "\001(\002\022\020\n\010altitude\030\005 \001(\002\022\030\n\007beacons\030\006 \003(\0132\007"
      ".Beacon\022\r\n\005width\030\007 \001(\002\022\016\n\006length\030\010 \001(\002\022\016"
      "\n\006height\030\t \001(\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 414);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_model_2eproto

const ::google::protobuf::EnumDescriptor* Code_Type_descriptor() {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_enum_descriptors[0];
}
bool Code_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Code_Type Code::Gold;
const Code_Type Code::Kasami;
const Code_Type Code::Hadamard;
const Code_Type Code::Type_MIN;
const Code_Type Code::Type_MAX;
const int Code::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Code::kTypeFieldNumber;
const int Code::kOrderFieldNumber;
const int Code::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Code::Code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_model_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Code)
}
Code::Code(const Code& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&type_)) + sizeof(order_));
  // @@protoc_insertion_point(copy_constructor:Code)
}

void Code::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&type_)) + sizeof(order_));
}

Code::~Code() {
  // @@protoc_insertion_point(destructor:Code)
  SharedDtor();
}

void Code::SharedDtor() {
}

void Code::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Code::descriptor() {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Code& Code::default_instance() {
  protobuf_model_2eproto::InitDefaults();
  return *internal_default_instance();
}

Code* Code::New(::google::protobuf::Arena* arena) const {
  Code* n = new Code;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Code::Clear() {
// @@protoc_insertion_point(message_clear_start:Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&order_) -
        reinterpret_cast<char*>(&type_)) + sizeof(order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Code)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Code.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Code_Type_IsValid(value)) {
            set_type(static_cast< ::Code_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 order = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Code)
  return false;
#undef DO_
}

void Code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Code.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required uint32 order = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->order(), output);
  }

  // repeated float data = 3;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Code)
}

::google::protobuf::uint8* Code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Code.Type type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required uint32 order = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->order(), target);
  }

  // repeated float data = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(3, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Code)
  return target;
}

size_t Code::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Code)
  size_t total_size = 0;

  if (has_type()) {
    // required .Code.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_order()) {
    // required uint32 order = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order());
  }

  return total_size;
}
size_t Code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Code)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Code.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required uint32 order = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated float data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Code)
  GOOGLE_DCHECK_NE(&from, this);
  const Code* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Code)
    MergeFrom(*source);
  }
}

void Code::MergeFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      order_ = from.order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Code::CopyFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Code::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Code::Swap(Code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Code::InternalSwap(Code* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(type_, other->type_);
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Code::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Code

// required .Code.Type type = 1;
bool Code::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Code::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Code::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Code::clear_type() {
  type_ = 0;
  clear_has_type();
}
::Code_Type Code::type() const {
  // @@protoc_insertion_point(field_get:Code.type)
  return static_cast< ::Code_Type >(type_);
}
void Code::set_type(::Code_Type value) {
  assert(::Code_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Code.type)
}

// required uint32 order = 2;
bool Code::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Code::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
void Code::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
void Code::clear_order() {
  order_ = 0u;
  clear_has_order();
}
::google::protobuf::uint32 Code::order() const {
  // @@protoc_insertion_point(field_get:Code.order)
  return order_;
}
void Code::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:Code.order)
}

// repeated float data = 3;
int Code::data_size() const {
  return data_.size();
}
void Code::clear_data() {
  data_.Clear();
}
float Code::data(int index) const {
  // @@protoc_insertion_point(field_get:Code.data)
  return data_.Get(index);
}
void Code::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:Code.data)
}
void Code::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:Code.data)
}
const ::google::protobuf::RepeatedField< float >&
Code::data() const {
  // @@protoc_insertion_point(field_list:Code.data)
  return data_;
}
::google::protobuf::RepeatedField< float >*
Code::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Code.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Beacon::kIdFieldNumber;
const int Beacon::kUuidFieldNumber;
const int Beacon::kSnrFieldNumber;
const int Beacon::kCodeFieldNumber;
const int Beacon::kEnabledFieldNumber;
const int Beacon::kNameFieldNumber;
const int Beacon::kXFieldNumber;
const int Beacon::kYFieldNumber;
const int Beacon::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Beacon::Beacon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_model_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Beacon)
}
Beacon::Beacon(const Beacon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uuid()) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_code()) {
    code_ = new ::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&id_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Beacon)
}

void Beacon::SharedCtor() {
  _cached_size_ = 0;
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&code_)) + sizeof(z_));
}

Beacon::~Beacon() {
  // @@protoc_insertion_point(destructor:Beacon)
  SharedDtor();
}

void Beacon::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete code_;
}

void Beacon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Beacon::descriptor() {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Beacon& Beacon::default_instance() {
  protobuf_model_2eproto::InitDefaults();
  return *internal_default_instance();
}

Beacon* Beacon::New(::google::protobuf::Arena* arena) const {
  Beacon* n = new Beacon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Beacon::Clear() {
// @@protoc_insertion_point(message_clear_start:Beacon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!uuid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uuid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(code_ != NULL);
      code_->::Code::Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&id_)) + sizeof(y_));
  }
  z_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Beacon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Beacon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Beacon.uuid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float snr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_snr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &snr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Code code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool enabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Beacon.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Beacon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Beacon)
  return false;
#undef DO_
}

void Beacon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Beacon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string uuid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Beacon.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // required float snr = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->snr(), output);
  }

  // required .Code code = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->code_, output);
  }

  // required bool enabled = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->enabled(), output);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Beacon.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // required float x = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->x(), output);
  }

  // required float y = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->y(), output);
  }

  // required float z = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Beacon)
}

::google::protobuf::uint8* Beacon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Beacon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string uuid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Beacon.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // required float snr = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->snr(), target);
  }

  // required .Code code = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->code_, deterministic, target);
  }

  // required bool enabled = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->enabled(), target);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Beacon.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // required float x = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->x(), target);
  }

  // required float y = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->y(), target);
  }

  // required float z = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Beacon)
  return target;
}

size_t Beacon::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Beacon)
  size_t total_size = 0;

  if (has_uuid()) {
    // required string uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  if (has_code()) {
    // required .Code code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->code_);
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_snr()) {
    // required float snr = 3;
    total_size += 1 + 4;
  }

  if (has_enabled()) {
    // required bool enabled = 5;
    total_size += 1 + 1;
  }

  if (has_x()) {
    // required float x = 7;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 8;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 9;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Beacon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Beacon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001fd) ^ 0x000001fd) == 0) {  // All required fields are present.
    // required string uuid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());

    // required .Code code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->code_);

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required float snr = 3;
    total_size += 1 + 4;

    // required bool enabled = 5;
    total_size += 1 + 1;

    // required float x = 7;
    total_size += 1 + 4;

    // required float y = 8;
    total_size += 1 + 4;

    // required float z = 9;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string name = 6;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Beacon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Beacon)
  GOOGLE_DCHECK_NE(&from, this);
  const Beacon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Beacon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Beacon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Beacon)
    MergeFrom(*source);
  }
}

void Beacon::MergeFrom(const Beacon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Beacon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uuid();
      uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_code()->::Code::MergeFrom(from.code());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      snr_ = from.snr_;
    }
    if (cached_has_bits & 0x00000020u) {
      enabled_ = from.enabled_;
    }
    if (cached_has_bits & 0x00000040u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000080u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_z(from.z());
  }
}

void Beacon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Beacon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Beacon::CopyFrom(const Beacon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Beacon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Beacon::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001fd) != 0x000001fd) return false;
  if (has_code()) {
    if (!this->code_->IsInitialized()) return false;
  }
  return true;
}

void Beacon::Swap(Beacon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Beacon::InternalSwap(Beacon* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  name_.Swap(&other->name_);
  swap(code_, other->code_);
  swap(id_, other->id_);
  swap(snr_, other->snr_);
  swap(enabled_, other->enabled_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Beacon::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Beacon

// required uint32 id = 1;
bool Beacon::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Beacon::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void Beacon::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void Beacon::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 Beacon::id() const {
  // @@protoc_insertion_point(field_get:Beacon.id)
  return id_;
}
void Beacon::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Beacon.id)
}

// required string uuid = 2;
bool Beacon::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Beacon::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
void Beacon::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Beacon::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
const ::std::string& Beacon::uuid() const {
  // @@protoc_insertion_point(field_get:Beacon.uuid)
  return uuid_.GetNoArena();
}
void Beacon::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Beacon.uuid)
}
#if LANG_CXX11
void Beacon::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Beacon.uuid)
}
#endif
void Beacon::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Beacon.uuid)
}
void Beacon::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Beacon.uuid)
}
::std::string* Beacon::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:Beacon.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Beacon::release_uuid() {
  // @@protoc_insertion_point(field_release:Beacon.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Beacon::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:Beacon.uuid)
}

// required float snr = 3;
bool Beacon::has_snr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Beacon::set_has_snr() {
  _has_bits_[0] |= 0x00000010u;
}
void Beacon::clear_has_snr() {
  _has_bits_[0] &= ~0x00000010u;
}
void Beacon::clear_snr() {
  snr_ = 0;
  clear_has_snr();
}
float Beacon::snr() const {
  // @@protoc_insertion_point(field_get:Beacon.snr)
  return snr_;
}
void Beacon::set_snr(float value) {
  set_has_snr();
  snr_ = value;
  // @@protoc_insertion_point(field_set:Beacon.snr)
}

// required .Code code = 4;
bool Beacon::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Beacon::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
void Beacon::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
void Beacon::clear_code() {
  if (code_ != NULL) code_->::Code::Clear();
  clear_has_code();
}
const ::Code& Beacon::code() const {
  const ::Code* p = code_;
  // @@protoc_insertion_point(field_get:Beacon.code)
  return p != NULL ? *p : *reinterpret_cast<const ::Code*>(
      &::_Code_default_instance_);
}
::Code* Beacon::mutable_code() {
  set_has_code();
  if (code_ == NULL) {
    code_ = new ::Code;
  }
  // @@protoc_insertion_point(field_mutable:Beacon.code)
  return code_;
}
::Code* Beacon::release_code() {
  // @@protoc_insertion_point(field_release:Beacon.code)
  clear_has_code();
  ::Code* temp = code_;
  code_ = NULL;
  return temp;
}
void Beacon::set_allocated_code(::Code* code) {
  delete code_;
  code_ = code;
  if (code) {
    set_has_code();
  } else {
    clear_has_code();
  }
  // @@protoc_insertion_point(field_set_allocated:Beacon.code)
}

// required bool enabled = 5;
bool Beacon::has_enabled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Beacon::set_has_enabled() {
  _has_bits_[0] |= 0x00000020u;
}
void Beacon::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000020u;
}
void Beacon::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
bool Beacon::enabled() const {
  // @@protoc_insertion_point(field_get:Beacon.enabled)
  return enabled_;
}
void Beacon::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
  // @@protoc_insertion_point(field_set:Beacon.enabled)
}

// optional string name = 6;
bool Beacon::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Beacon::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Beacon::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Beacon::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Beacon::name() const {
  // @@protoc_insertion_point(field_get:Beacon.name)
  return name_.GetNoArena();
}
void Beacon::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Beacon.name)
}
#if LANG_CXX11
void Beacon::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Beacon.name)
}
#endif
void Beacon::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Beacon.name)
}
void Beacon::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Beacon.name)
}
::std::string* Beacon::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Beacon.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Beacon::release_name() {
  // @@protoc_insertion_point(field_release:Beacon.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Beacon::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Beacon.name)
}

// required float x = 7;
bool Beacon::has_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Beacon::set_has_x() {
  _has_bits_[0] |= 0x00000040u;
}
void Beacon::clear_has_x() {
  _has_bits_[0] &= ~0x00000040u;
}
void Beacon::clear_x() {
  x_ = 0;
  clear_has_x();
}
float Beacon::x() const {
  // @@protoc_insertion_point(field_get:Beacon.x)
  return x_;
}
void Beacon::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Beacon.x)
}

// required float y = 8;
bool Beacon::has_y() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Beacon::set_has_y() {
  _has_bits_[0] |= 0x00000080u;
}
void Beacon::clear_has_y() {
  _has_bits_[0] &= ~0x00000080u;
}
void Beacon::clear_y() {
  y_ = 0;
  clear_has_y();
}
float Beacon::y() const {
  // @@protoc_insertion_point(field_get:Beacon.y)
  return y_;
}
void Beacon::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Beacon.y)
}

// required float z = 9;
bool Beacon::has_z() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Beacon::set_has_z() {
  _has_bits_[0] |= 0x00000100u;
}
void Beacon::clear_has_z() {
  _has_bits_[0] &= ~0x00000100u;
}
void Beacon::clear_z() {
  z_ = 0;
  clear_has_z();
}
float Beacon::z() const {
  // @@protoc_insertion_point(field_get:Beacon.z)
  return z_;
}
void Beacon::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:Beacon.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Environement::kNameFieldNumber;
const int Environement::kLatitudeFieldNumber;
const int Environement::kLongitudeFieldNumber;
const int Environement::kAltitudeFieldNumber;
const int Environement::kBeaconsFieldNumber;
const int Environement::kWidthFieldNumber;
const int Environement::kLengthFieldNumber;
const int Environement::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Environement::Environement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_model_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Environement)
}
Environement::Environement(const Environement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      beacons_(from.beacons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:Environement)
}

void Environement::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(height_));
}

Environement::~Environement() {
  // @@protoc_insertion_point(destructor:Environement)
  SharedDtor();
}

void Environement::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Environement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Environement::descriptor() {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Environement& Environement::default_instance() {
  protobuf_model_2eproto::InitDefaults();
  return *internal_default_instance();
}

Environement* Environement::New(::google::protobuf::Arena* arena) const {
  Environement* n = new Environement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Environement::Clear() {
// @@protoc_insertion_point(message_clear_start:Environement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  beacons_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&latitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&latitude_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Environement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Environement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Environement.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float longitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float altitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_altitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Beacon beacons = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beacons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float length = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float height = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Environement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Environement)
  return false;
#undef DO_
}

void Environement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Environement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Environement.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional float latitude = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->latitude(), output);
  }

  // optional float longitude = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->longitude(), output);
  }

  // optional float altitude = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->altitude(), output);
  }

  // repeated .Beacon beacons = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->beacons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->beacons(static_cast<int>(i)), output);
  }

  // optional float width = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->width(), output);
  }

  // optional float length = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->length(), output);
  }

  // optional float height = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Environement)
}

::google::protobuf::uint8* Environement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Environement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Environement.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional float latitude = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->latitude(), target);
  }

  // optional float longitude = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->longitude(), target);
  }

  // optional float altitude = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->altitude(), target);
  }

  // repeated .Beacon beacons = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->beacons_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->beacons(static_cast<int>(i)), deterministic, target);
  }

  // optional float width = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->width(), target);
  }

  // optional float length = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->length(), target);
  }

  // optional float height = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Environement)
  return target;
}

size_t Environement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Environement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Beacon beacons = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->beacons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->beacons(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional float latitude = 3;
    if (has_latitude()) {
      total_size += 1 + 4;
    }

    // optional float longitude = 4;
    if (has_longitude()) {
      total_size += 1 + 4;
    }

    // optional float altitude = 5;
    if (has_altitude()) {
      total_size += 1 + 4;
    }

    // optional float width = 7;
    if (has_width()) {
      total_size += 1 + 4;
    }

    // optional float length = 8;
    if (has_length()) {
      total_size += 1 + 4;
    }

    // optional float height = 9;
    if (has_height()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Environement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Environement)
  GOOGLE_DCHECK_NE(&from, this);
  const Environement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Environement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Environement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Environement)
    MergeFrom(*source);
  }
}

void Environement::MergeFrom(const Environement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Environement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  beacons_.MergeFrom(from.beacons_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      altitude_ = from.altitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000020u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000040u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Environement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Environement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Environement::CopyFrom(const Environement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Environement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Environement::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->beacons())) return false;
  return true;
}

void Environement::Swap(Environement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Environement::InternalSwap(Environement* other) {
  using std::swap;
  beacons_.InternalSwap(&other->beacons_);
  name_.Swap(&other->name_);
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(altitude_, other->altitude_);
  swap(width_, other->width_);
  swap(length_, other->length_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Environement::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Environement

// optional string name = 2;
bool Environement::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Environement::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Environement::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Environement::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Environement::name() const {
  // @@protoc_insertion_point(field_get:Environement.name)
  return name_.GetNoArena();
}
void Environement::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Environement.name)
}
#if LANG_CXX11
void Environement::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Environement.name)
}
#endif
void Environement::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Environement.name)
}
void Environement::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Environement.name)
}
::std::string* Environement::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Environement.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Environement::release_name() {
  // @@protoc_insertion_point(field_release:Environement.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Environement::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Environement.name)
}

// optional float latitude = 3;
bool Environement::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Environement::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
void Environement::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void Environement::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float Environement::latitude() const {
  // @@protoc_insertion_point(field_get:Environement.latitude)
  return latitude_;
}
void Environement::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:Environement.latitude)
}

// optional float longitude = 4;
bool Environement::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Environement::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
void Environement::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void Environement::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float Environement::longitude() const {
  // @@protoc_insertion_point(field_get:Environement.longitude)
  return longitude_;
}
void Environement::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:Environement.longitude)
}

// optional float altitude = 5;
bool Environement::has_altitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Environement::set_has_altitude() {
  _has_bits_[0] |= 0x00000008u;
}
void Environement::clear_has_altitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void Environement::clear_altitude() {
  altitude_ = 0;
  clear_has_altitude();
}
float Environement::altitude() const {
  // @@protoc_insertion_point(field_get:Environement.altitude)
  return altitude_;
}
void Environement::set_altitude(float value) {
  set_has_altitude();
  altitude_ = value;
  // @@protoc_insertion_point(field_set:Environement.altitude)
}

// repeated .Beacon beacons = 6;
int Environement::beacons_size() const {
  return beacons_.size();
}
void Environement::clear_beacons() {
  beacons_.Clear();
}
const ::Beacon& Environement::beacons(int index) const {
  // @@protoc_insertion_point(field_get:Environement.beacons)
  return beacons_.Get(index);
}
::Beacon* Environement::mutable_beacons(int index) {
  // @@protoc_insertion_point(field_mutable:Environement.beacons)
  return beacons_.Mutable(index);
}
::Beacon* Environement::add_beacons() {
  // @@protoc_insertion_point(field_add:Environement.beacons)
  return beacons_.Add();
}
::google::protobuf::RepeatedPtrField< ::Beacon >*
Environement::mutable_beacons() {
  // @@protoc_insertion_point(field_mutable_list:Environement.beacons)
  return &beacons_;
}
const ::google::protobuf::RepeatedPtrField< ::Beacon >&
Environement::beacons() const {
  // @@protoc_insertion_point(field_list:Environement.beacons)
  return beacons_;
}

// optional float width = 7;
bool Environement::has_width() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Environement::set_has_width() {
  _has_bits_[0] |= 0x00000010u;
}
void Environement::clear_has_width() {
  _has_bits_[0] &= ~0x00000010u;
}
void Environement::clear_width() {
  width_ = 0;
  clear_has_width();
}
float Environement::width() const {
  // @@protoc_insertion_point(field_get:Environement.width)
  return width_;
}
void Environement::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:Environement.width)
}

// optional float length = 8;
bool Environement::has_length() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Environement::set_has_length() {
  _has_bits_[0] |= 0x00000020u;
}
void Environement::clear_has_length() {
  _has_bits_[0] &= ~0x00000020u;
}
void Environement::clear_length() {
  length_ = 0;
  clear_has_length();
}
float Environement::length() const {
  // @@protoc_insertion_point(field_get:Environement.length)
  return length_;
}
void Environement::set_length(float value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:Environement.length)
}

// optional float height = 9;
bool Environement::has_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Environement::set_has_height() {
  _has_bits_[0] |= 0x00000040u;
}
void Environement::clear_has_height() {
  _has_bits_[0] &= ~0x00000040u;
}
void Environement::clear_height() {
  height_ = 0;
  clear_has_height();
}
float Environement::height() const {
  // @@protoc_insertion_point(field_get:Environement.height)
  return height_;
}
void Environement::set_height(float value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:Environement.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
